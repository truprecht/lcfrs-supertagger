[Corpus]
# the whole corpus should be in a single file
filename = corpora/alpinosample.export
# determines the corpus format: export (Negra), brackets (PTB), tiger, ...
inputfmt = export
# determines the corpus file encoding, usuallly utf-8, except export which is in iso-8859-1
inputenc = iso-8859-1
# split determines the corpus portions used as train, dev and test split
# split = [<skip first n sentences>] <train sentences> <dev sentences> <test sentences>
# ```split = debug <train> <test>``` uses the first <train> sentences as train and dev set, and the first <test> sentences for test
split = debug 3 1
# two-letter language code used to determine pretrained embeddings
language = nl
# pos, constituent or "pos constituent"
separate_attribs = pos
cachedir = .corpus-cache

[Grammar]
# horizontal and vertical markovization
# for the extracted corpus grammar when binarized
h = 0
v = 1
# head rules for dependency structures
headrules = disco-dop/alpino.headrules
# enables head-outward binarization, needs headrules
head_outward = true
# transport guide for lexicalization, one of:
#   InorderGuide, StrictInorderGuide, LeastGuide or ModifierGuide
# ModifierGuide needs head-outward binarization and headrules
guide = StrictInorderGuide
# components used for the construction of grammar nonterminals,
# list consisting of:
#   (1) Constituent,    (the top constituent symbol in a chain)
#   (2) MergedChainConstituents, (all but the top constituent symbols in a chain)
#   (3) OldFanout,      (the fanout before transportation of lexical symbols)
#   (4) NewFanout,      (the fanout after transportation)
#   (5) Transport,      (marks nodes where a lexical symbol is transported beyond the subtree)
#   (6) FanoutChange,   (marks nodes where the fanout changed with transportation)
#   (7) ChildIdx,       (the child index of this node wrt. to its parent)
#   (8) CoarseConstituent (constructs nonterminals from the first letter of nonterminals)
#   (9) BinarizationSuffix (the binarization marker and markov. symbols)
#   or: Vanilla (includes 1,2,3,5,6,9),
#       MergedAndTransport (includes 1,4,5,9),
#       NoConstituent (includes 4,5),
#       Merged (includes 1,4,9)
#       Direction (includes 4,7)
#       Coarse (includes 4,8)
#       CoarseBin (includes 4,8,9)
nonterminal_features = CoarseBin

[Eval-common]
# In the case of parse fails the largest partial derivations are put together.
# fallbackprob is a penalty chosen in the interval [0, 1] that is used as weight
# for artificially introduced rules when no derivation is found.
fallbackprob = 0
# determines how many supertags per sentence position are used
ktags = 10
# configuration file for evalb-style F-scores
evalfilename = disco-dop/proper.prm
# batch size for neural network predictions
batchsize = 32
# reports parsing scores for all constituents (False), discontinuous constituents (True),
# both separately (both), or as specified in ```evalfilename``` (param)
only_disc = both
# reports supertag prediction accuracy among k best tags (kbest),
# for the best tag (best), both separately (both), or none at all (none)
# accuracy = both
# reports accuracy of the predicted tags defined in separate_attribs
othertag_accuracy = True

# these sections may be used if configurations for
# dev and test evaluation diverge
# e.g. this configuration monitors the prediction accuracy of supertags
# in the development set during training, but not at test time
[Eval-Development]
accuracy = both

[Eval-Test]
accuracy = none
